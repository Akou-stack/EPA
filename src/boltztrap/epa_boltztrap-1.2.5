diff -ur boltztrap-1.2.5_original/src/fermiintegrals.F90 boltztrap-1.2.5/src/fermiintegrals.F90
--- boltztrap-1.2.5_original/src/fermiintegrals.F90	2015-05-12 09:13:46.469123000 -0700
+++ boltztrap-1.2.5/src/fermiintegrals.F90	2015-05-12 18:19:09.927555000 -0700
@@ -30,6 +30,10 @@
   integer :: un_tr, un_ct, un_ht, un_trfix, un_ctfix, un_htfix
   CHARACTER(len=20)      :: dummystring
 
+  INTEGER                :: ii, jj, kk, ll, mm, nn, oo, nwin, nmodes, nemax
+  INTEGER, ALLOCATABLE   :: ne(:)
+  REAL(8), ALLOCATABLE   :: ee(:), de(:), wavg(:), gavg(:,:,:,:)
+
   type(fermispl_type) :: splobj
   integer :: nspl
 
@@ -88,6 +92,41 @@
 &        "                                    kappa0(x,x')"
   WRITE(un_ht,'(a)') "#       Ef[Ry] T [K]            N         27 Hall coefficients"
 
+!
+!-epa-1-begin
+!
+  OPEN (888, FILE='epa_boltztrap.dat', STATUS='old', FORM='formatted')
+  READ(888, *) nwin, nmodes
+  ALLOCATE(ee(nwin))
+  ALLOCATE(de(nwin))
+  ALLOCATE(ne(nwin))
+  do ii = 1, nwin
+     READ(888, *) ee(ii), de(ii), ne(ii) ! ee & de in eV
+  enddo
+  ALLOCATE(wavg(nmodes))
+  READ(888, *) (wavg(ll), ll = 1, nmodes) ! <w> in cm^-1
+  nemax = maxval(ne)
+  ALLOCATE(gavg(nmodes, nemax, nemax, nwin))
+  do ii = 1, nwin
+     do jj = 1, ne(ii)
+        do kk = 1, ne(ii)
+           READ(888, *) mm, nn, oo, (gavg(ll, kk, jj, ii), ll = 1, nmodes) ! <|g|^2> in eV^2
+        enddo
+     enddo
+  enddo
+  CLOSE(888)
+
+  ! convert ee & de from eV to Ha
+  ee(:) = ee(:) * EV
+  de(:) = de(:) * EV
+  ! convert <w> from cm^-1 to Ha
+  wavg(:) = wavg(:) * (2.0d0 * PI * Hbar_SI * JOULE) * (1.0d2 * Clight_SI)
+  ! convert <|g|^2> from eV^2 to Ha^2
+  gavg(:,:,:,:) = gavg(:,:,:,:) * EV**2
+!
+!-epa-1-end
+!
+
 ! set up fermi spline object
 !  argmin = (ebmin-ebmax)/deltat ! force set to -40
 !  argmax = (ebmax-ebmin)/deltat ! force set to +40
@@ -118,7 +157,8 @@
      DO it=1,itmax
         temp=it*deltat
         call fermiint_fix_ef_T(cell%volume, efermi, deltaef, ebmin, temp, &
-             un_tr, un_ct, un_ht, npoints, dos1, dos_sigxy, dos_sigxyz, spinorbit, icut1, 1, splobj)
+             un_tr, un_ct, un_ht, npoints, dos1, dos_sigxy, dos_sigxyz, spinorbit, icut1, 1, splobj, &
+             nwin, nmodes, nemax, ee, de, ne, wavg, gavg)
      ENDDO
   ENDDO
 
@@ -183,7 +223,8 @@
       end if
 
       call fermiint_fix_ef_T(cell%volume, efermi, deltaef, ebmin,  temp, &
-           un_trfix, un_ctfix, un_htfix, npoints, dos1, dos_sigxy, dos_sigxyz, spinorbit, icut1, 0, splobj)
+           un_trfix, un_ctfix, un_htfix, npoints, dos1, dos_sigxy, dos_sigxyz, spinorbit, icut1, 0, splobj, &
+           nwin, nmodes, nemax, ee, de, ne, wavg, gavg)
     end do
     WRITE (un_trfix,*)
     WRITE (un_ctfix,*)
@@ -203,6 +244,12 @@
   close (un_ctfix)
   close (un_htfix)
 
+  DEALLOCATE(ee)
+  DEALLOCATE(de)
+  DEALLOCATE(ne)
+  DEALLOCATE(wavg)
+  DEALLOCATE(gavg)
+
 END SUBROUTINE fermiintegrals
 
 
@@ -214,7 +261,7 @@
 !----------------------------------------------------------------------------
 subroutine fermiint_fix_ef_T(volume, efermi, deltaef, ebmin, temp, &
     unit_tr, unit_cond, unit_hall, npoints, dos1, dos_sigxy, dos_sigxyz, spinorbit, icut1, prtef, &
-    splobj)
+    splobj, nwin, nmodes, nemax, ee, de, ne, wavg, gavg)
 
  USE constants
  USE input
@@ -234,6 +281,9 @@
 
  type(fermispl_type), intent(in) :: splobj
 
+ integer, intent(in) :: nwin, nmodes, nemax, ne(nwin)
+ real(8), intent(in) :: ee(nwin), de(nwin), wavg(nmodes), gavg(nmodes, nemax, nemax, nwin)
+
 ! local vars
  INTEGER                :: ialp,ibet
  INTEGER                :: i,j,k
@@ -249,9 +299,15 @@
  REAL(8)                :: cond(3,3),nu(3,3),kappa(3,3),sigxyz(3,3,3)
  REAL(8)                :: minv_sigxy(3,3),seebeck(3,3),thermal(3,3),hall(3,3,3)
 
+ INTEGER                :: ii, jj, kk, ll, mm
+ REAL(8)                :: invtau, kt, nn, fa, fe, dosa, dose, xx, gk(2)
+ REAL(8), ALLOCATABLE   :: gj(:)
+
 ! functions
  REAL(8)                :: fermi,dfermide,dfermidt
 
+ ALLOCATE(gj(nemax))
+
 !source
  specheat=ZERO
  sumelec=ZERO
@@ -287,6 +343,65 @@
         &           * taureffact)) )
     end if
 
+!
+!-epa-2-begin
+!
+    kt = temp * BOLTZMANN ! convert T from K to Ha
+    invtau = 0.0d0
+    xx = wavg(nmodes) / deltaef
+    ialp = int(xx) + 1
+
+    if (i .GE. ialp .AND. i .LE. npoints - ialp) then
+       do ll = 1, nmodes
+          nn = 1.0d0 / (exp(wavg(ll) / kt) - 1.0d0)
+          fa = 1.0d0 / (exp((ene + wavg(ll) - efermi) / kt) + 1.0d0)
+          fe = 1.0d0 / (exp((ene - wavg(ll) - efermi) / kt) + 1.0d0)
+
+          xx = wavg(ll) / deltaef
+          ibet = int(xx)
+          xx = xx - dble(ibet)
+          ! interpolate and convert DOS from state/spin/Ha/bohr^3 to state/spin/Ha/unitcell
+          dosa = volume * (dos1(i + ibet) * (1.0d0 - xx) + dos1(i + ibet + 1) * xx)
+          dose = volume * (dos1(i - ibet - 1) * xx + dos1(i - ibet) * (1.0d0 - xx))
+
+          if (ene .LT. sum(ee) / nwin) then
+             ii = 1
+          else
+             ii = 2
+          endif
+          if (ne(ii) .eq. 1) then
+             gk(:) = gavg(ll, 1, 1, ii)
+          else
+             xx = (ene - ee(ii)) / de(ii)
+             xx = max(xx, 1.0d-12)
+             xx = min(xx, ne(ii) - 1.0d-12)
+             jj = int(xx) + 1
+             do kk = 1, nemax
+                gj(kk) = gavg(ll, kk, jj, ii)
+             enddo
+             do mm = 1, 2
+                xx = (ene + wavg(ll) * (3 - 2 * mm) - ee(ii)) / de(ii)
+                xx = max(xx, 1.0d-12)
+                xx = min(xx, ne(ii) - 1.0d-12)
+                kk = int(xx) + 1
+                gk(mm) = gj(kk)
+             enddo
+          endif
+
+          invtau = invtau + gk(1) * (nn + fa) * dosa + gk(2) * (nn + 1.0d0 - fe) * dose
+       enddo
+       invtau = invtau * (2.0d0 * PI) / (Hbar_SI * JOULE)
+    endif
+
+    if (invtau .GT. 1.0d0) then
+       lifetime = 1.0d0 / invtau
+    else
+       lifetime = 0.0d0
+    endif
+!
+!-epa-2-end
+!
+
     factor1=fermi(ene,efermi,temp)*spinorbit
     factor2=dfermide(ene,efermi,temp)*spinorbit
     factor3=dfermidt(ene,efermi,temp)*spinorbit
@@ -360,6 +475,8 @@
    WRITE(unit_hall,102) temp,sumelec,hall(1:3,1:3,1:3),efermi/RYDBERG ! **** c11,15,25 are yzx,zxy,xyz respectively ***
  end if
 
+ DEALLOCATE(gj)
+
 !100  FORMAT(F10.5,F10.4,F16.8,F16.8,9E16.8)
  101  FORMAT(F10.5,F10.4,F16.8,27E16.8)
 ! same without the Fermi energy
diff -ur boltztrap-1.2.5_original/src/m_interfaces.F90 boltztrap-1.2.5/src/m_interfaces.F90
--- boltztrap-1.2.5_original/src/m_interfaces.F90	2015-05-12 09:13:46.471732000 -0700
+++ boltztrap-1.2.5/src/m_interfaces.F90	2015-05-12 18:19:10.647382000 -0700
@@ -137,7 +137,7 @@
 interface
 subroutine fermiint_fix_ef_T(volume, efermi, deltaef, ebmin, temp, &
     unit_tr, unit_cond, unit_hall, npoints, dos1, dos_sigxy, dos_sigxyz, spinorbit, icut1, prtef, &
-    splobj)
+    splobj, nwin, nmodes, nemax, ee, de, ne, wavg, gavg)
  USE constants
  USE input
  USE bandstructure
@@ -153,6 +153,8 @@
  real(8), intent(in) :: dos_sigxy(3,3,0:npoints)
  real(8), intent(in) :: dos_sigxyz(3,3,3,0:npoints)
  type(fermispl_type),intent(in) :: splobj
+ integer, intent(in) :: nwin, nmodes, nemax, ne(nwin)
+ real(8), intent(in) :: ee(nwin), de(nwin), wavg(nmodes), gavg(nmodes, nemax, nemax, nwin)
 
 end subroutine fermiint_fix_ef_T
 end interface
